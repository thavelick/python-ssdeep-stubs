from ssdeep._libfuzzy import ffi as ffi, lib as lib

class BaseError(Exception): ...
class InternalError(BaseError): ...

class BaseHash:
    @property
    def block_size(self): ...
    @property
    def name(self): ...
    def digest(self, elimseq: bool = ..., notrunc: bool = ...) -> None: ...

class Hash(BaseHash):
    def __init__(self) -> None: ...
    def copy(self): ...
    def update(self, buf, encoding: str = ...) -> None: ...
    def digest(self, elimseq: bool = ..., notrunc: bool = ...): ...
    def __del__(self) -> None: ...

class PseudoHash(BaseHash):
    def __init__(self) -> None: ...
    def copy(self): ...
    def update(self, buf, encoding: str = ...) -> None: ...
    def digest(self, elimseq: bool = ..., notrunc: bool = ...): ...

def compare(sig1, sig2): ...
def hash(buf, encoding: str = ...): ...
def hash_from_file(filename): ...
